"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["775"],{5413:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>r,default:()=>a,toc:()=>c,metadata:()=>i,assets:()=>d,contentTitle:()=>o});var i=JSON.parse('{"id":"usage/overview","title":"Overview","description":"Key Concepts","source":"@site/docs/usage/overview.mdx","sourceDirName":"usage","slug":"/usage/overview","permalink":"/komodo-import/docs/usage/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usage/overview.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Overview","toc_max_heading_level":4},"sidebar":"tutorialSidebar","previous":{"title":"Usage","permalink":"/komodo-import/docs/category/usage"},"next":{"title":"Using Sync Resources","permalink":"/komodo-import/docs/usage/resourceSync"}}'),t=s(5893),l=s(65);s(7902),s(5525),s(792),s(7294),s(5094),s(6893),s(1142);let r={sidebar_position:2,title:"Overview",toc_max_heading_level:4},o=void 0,d={},c=[{value:"Key Concepts",id:"key-concepts",level:2},{value:"Inputs",id:"inputs",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Outputs",id:"outputs",level:3},{value:"Inputs",id:"inputs-1",level:2},{value:"Stacks",id:"stacks",level:3},{value:"Common Stack Configuration",id:"common-stack-configuration",level:5},{value:"Files On Server",id:"files-on-server",level:4},{value:"Project Files Detection",id:"project-file-detection",level:6},{value:"Configuration",id:"fos-config",level:5},{value:"Git Repo",id:"git-repo",level:4},{value:"Monorepos",id:"monorepos",level:6},{value:"Configuration",id:"configuration-1",level:4},{value:"Outputs",id:"outputs-1",level:2},{value:"Console",id:"console",level:3},{value:"API Sync",id:"api-sync",level:3},{value:"File",id:"file",level:3},{value:"Komodo API",id:"komodo-api",level:2},{value:"API Configuration",id:"api-configuration",level:4}];function h(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components},{Details:s}=n;return s||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,t.jsxs)(n.p,{children:["There are three parts to using Komodo Import (KI). ",(0,t.jsx)(n.strong,{children:"Which Inputs, Configuration, and Outputs are used are all defined using environmental variables."})]}),"\n",(0,t.jsx)(n.h3,{id:"inputs",children:"Inputs"}),"\n",(0,t.jsxs)(n.p,{children:["This is what KI reads to generate ",(0,t.jsx)(n.a,{href:"https://komo.do/docs/resources",children:"Komodo Resources"}),". These are existing, docker-related resources on an individual machine such as"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.docker.com/compose/how-tos/project-name/",children:"Docker Compose projects"})," (",(0,t.jsx)(n.code,{children:"compose.yaml"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Docker containers"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["These are ",(0,t.jsx)(n.strong,{children:"environmental variables"})," supplied to KI to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"set defaults for Komodo Resources (image registry, auto update, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"define required fields for Komodo Resources (Server Name, Run Directory, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"define settings for how KI to interacts with Komodo (API Key, existing Resource behavior, etc.)"}),"\n",(0,t.jsxs)(n.li,{children:["define what ",(0,t.jsx)(n.a,{href:"#outputs",children:"Outputs"})," KI uses (log to file, export to Komodo, etc.)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"outputs",children:"Outputs"}),"\n",(0,t.jsxs)(n.p,{children:["These are where and how KI puts the Resources created from ",(0,t.jsx)(n.a,{href:"#inputs",children:"Inputs"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Log to output (docker logs, node console)"}),"\n",(0,t.jsx)(n.li,{children:"Log to file"}),"\n",(0,t.jsx)(n.li,{children:"Export to Komodo API (create Resource Sync, etc.)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"inputs-1",children:"Inputs"}),"\n",(0,t.jsx)(n.h3,{id:"stacks",children:"Stacks"}),"\n",(0,t.jsxs)(n.p,{children:["KI can create Komodo ",(0,t.jsx)(n.a,{href:"https://komo.do/docs/resources#stack",children:"Stack"})," Resources from existing resources on your machine."]}),"\n",(0,t.jsx)(n.h5,{id:"common-stack-configuration",children:"Common Stack Configuration"}),"\n",(0,t.jsx)(n.p,{children:"These environmental variables are applicable to all Stack types below."}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Environmental Variables"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"ENV"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Required"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"SERVER_NAME"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["The name of the Komodo ",(0,t.jsx)(n.a,{href:"https://komo.do/docs/resources#server",children:"Server"})," where a Stack is located"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"HOST_PARENT_PATH"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["The parent directory on the ",(0,t.jsx)(n.strong,{children:"host"})," where stack folders are located."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"WRITE_ENV"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["Write the contents of found .env files to Komodo ",(0,t.jsx)(n.strong,{children:"Environment"}),". Likely want this as ",(0,t.jsx)(n.code,{children:"true"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"FOLDER_GLOB"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"*"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,t.jsx)(n.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use for finding folders in the top-level folder given to Komodo Import"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"FOLDER_IGNORE_GLOB"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,t.jsx)(n.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use to ignore folders in the top-level folder given to Komodo Import"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"COMPOSE_FILE_GLOB"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"**/{compose,docker-compose}*.y?(a)ml"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,t.jsx)(n.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use for finding files for ",(0,t.jsx)(n.strong,{children:"Files Paths"})," in Stack config"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"ENV_FILE_GLOB"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"**/.env"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,t.jsx)(n.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use for finding files for ",(0,t.jsx)(n.strong,{children:"Additional Env Files"})," in Stack config"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"KOMODO_ENV_NAME"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:".komodoenv"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["If existing .env files are found, and ",(0,t.jsx)(n.code,{children:"WRITE_ENV=false"}),", then this name will be used for the .env that Komodo writes using its own Environment section"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"IMAGE_REGISTRY_PROVIDER"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Name of Image Registry to use"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"IMAGE_REGISTRY_ACCOUNT"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Image Registry account to use"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"POLL_FOR_UPDATE"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Poll for newer images?"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"AUTO_UPDATE"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Auto Update stack?"})]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"files-on-server",children:"Files On Server"}),"\n",(0,t.jsxs)(n.p,{children:["Use existing, non git-based ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/compose/how-tos/project-name/",children:"Docker Compose projects"})," (",(0,t.jsx)(n.code,{children:"compose.yaml"}),") as ",(0,t.jsx)(n.strong,{children:"Files On Server"})," mode Komodo Stacks."]}),"\n",(0,t.jsxs)(n.p,{children:["KI will generate multiple Stacks from all folders within the given folder. This is similar to how ",(0,t.jsx)(n.a,{href:"https://github.com/louislam/dockge",children:"dockge"})," works."]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.p,{children:"If your folder structure looks like this"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u2514\u2500\u2500 /home/myUser/homelab/\n    \u251C\u2500\u2500 immich/\n    \u2502   \u2514\u2500\u2500 compose.yaml\n    \u251C\u2500\u2500 plex/\n    \u2502   \u2514\u2500\u2500 docker-compose.yaml\n    \u2514\u2500\u2500 uptime-kuma/\n        \u2514\u2500\u2500 compose.yaml\n"})}),(0,t.jsxs)(n.p,{children:["and you use ",(0,t.jsx)(n.code,{children:"/home/myUser/homelab/"})," with KI then it will output stacks for"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"immich"})," with Run Directory ",(0,t.jsx)(n.code,{children:"/home/myUser/homelab/immich"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"plex"})," with Run Directory ",(0,t.jsx)(n.code,{children:"/home/myUser/homelab/plex"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"uptime-kuma"})," with Run Directory ",(0,t.jsx)(n.code,{children:"/home/myUser/homelab/uptime-kuma"})]}),"\n"]})]}),"\n",(0,t.jsx)(n.h6,{id:"project-file-detection",children:"Project Files Detection"}),"\n",(0,t.jsxs)(n.p,{children:["Komodo Import makes some reasonable assumptions about which ",(0,t.jsx)(n.code,{children:"compose.yaml"})," and ",(0,t.jsx)(n.code,{children:".env"})," files you want to use within each project's folder. These can be overriden using the ",(0,t.jsx)(n.code,{children:"*_GLOB"})," environmental varibales from the ",(0,t.jsx)(n.a,{href:"#fos-config",children:"Configuration"})," below."]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"File Detection and Behavior Details"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Compose Files","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Default pattern","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Looks for ",(0,t.jsx)(n.code,{children:"compose.y(a)ml"})," and ",(0,t.jsx)(n.code,{children:"docker-compose.y(a)ml"})]}),"\n",(0,t.jsxs)(n.li,{children:["Files may have interim names like ",(0,t.jsx)(n.code,{children:"compose.dev.yaml"})]}),"\n",(0,t.jsxs)(n.li,{children:["Can be overridden with ",(0,t.jsx)(n.code,{children:"COMPOSE_FILE_GLOB"})," env"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Will prioritize ",(0,t.jsx)(n.code,{children:"compose.yaml"})," over ",(0,t.jsx)(n.code,{children:"docker-compose.yaml"})]}),"\n",(0,t.jsxs)(n.li,{children:["Will choose the file with the shortest path EX","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Prioritizes ",(0,t.jsx)(n.code,{children:"./compose.yaml"})," over ",(0,t.jsx)(n.code,{children:"./aFolder/compose.yaml"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[".env Files","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Default pattern","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Adds all ",(0,t.jsx)(n.code,{children:".env"})," files found at top-level or sub-folders"]}),"\n",(0,t.jsxs)(n.li,{children:["Can be overridden with ",(0,t.jsx)(n.code,{children:"ENV_FILE_GLOB"})," env"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["If a ",(0,t.jsx)(n.code,{children:".env"})," file is found then configures Komodo to write it's own Environment section to ",(0,t.jsx)(n.code,{children:".komodoenv"})," instead of ",(0,t.jsx)(n.code,{children:".env"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Komodo env name can be overridden with ",(0,t.jsx)(n.code,{children:"KOMODO_ENV_NAME"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,t.jsxs)(n.p,{children:["Komodo Import will ",(0,t.jsx)(n.strong,{children:"log"})," which files it detects and indicate which ones it will use for each project. These can be manually modified in the generated TOML, ",(0,t.jsx)(n.a,{href:"#api-sync",children:"API Sync Resource"}),", or after creating the Stack in Komodo."]})]}),"\n",(0,t.jsx)(n.h5,{id:"fos-config",children:"Configuration"}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Environmental Variables"}),(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.a,{href:"#common-stack-configuration",children:(0,t.jsx)(n.strong,{children:"Common Stack Configuration environmental variables"})})]})]}),"\n",(0,t.jsxs)(n.p,{children:["For ",(0,t.jsx)(n.a,{href:"../../installation#docker",children:"docker"})," usage the folder with your projects should be mounted to ",(0,t.jsx)(n.code,{children:"/filesOnServer"})," in the container."]}),"\n",(0,t.jsx)(n.h4,{id:"git-repo",children:"Git Repo"}),"\n",(0,t.jsxs)(n.p,{children:["Use existing, ",(0,t.jsx)(n.strong,{children:"git repository"})," folders containing ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/compose/how-tos/project-name/",children:"Docker Compose projects"})," (",(0,t.jsx)(n.code,{children:"compose.yaml"}),") as ",(0,t.jsx)(n.strong,{children:"Git Repo"})," mode Komodo Stacks."]}),"\n",(0,t.jsx)(n.p,{children:"KI will generate multiple Stacks from all folders within the given folder. Each folder detected as a git repository will have all required fields in a Git Repo Komodo Stack configured based on information from the local repository."}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"How Repository Parsing Works"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A folder is only built as a Git Repo stack if...","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["It contains a valid ",(0,t.jsx)(n.code,{children:".git"})," folder"]}),"\n",(0,t.jsx)(n.li,{children:"The git repo has a valid remote"}),"\n",(0,t.jsx)(n.li,{children:"The current checked out local branch is tracking a remote branch"}),"\n",(0,t.jsxs)(n.li,{children:["If any of the above are not true then the folder is instead parsed as a ",(0,t.jsx)(n.a,{href:"#files-on-server",children:"Files On Server"})," Stack"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Additionally, if ",(0,t.jsx)(n.a,{href:"#komodo-api",children:(0,t.jsx)(n.strong,{children:"Komodo API is configured"})})," then...","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If Komodo has a ",(0,t.jsx)(n.a,{href:"https://komo.do/docs/resources#repo",children:"Repo"})," Resource that matches the remote, then the Git Repo Stack uses a Linked Repo"]}),"\n",(0,t.jsx)(n.li,{children:"If Komodo has a Git Provider matching the remote URL domain then that is used, along with the Git Provider user (private git is automatically detected)"}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.p,{children:"You have two repositories at"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"https://git.mydomain.com/myUser/immich"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"https://github.com/anotherUser/plex"})}),"\n"]}),(0,t.jsx)(n.p,{children:"Your folder structure looks like this"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"/home/myUser/homelab\n\u251C\u2500\u2500 immich\n\u2502   \u251C\u2500\u2500 .git\n\u2502   \u2514\u2500\u2500 compose.yaml\n\u251C\u2500\u2500 plex\n\u2502   \u251C\u2500\u2500 .git\n\u2502   \u2514\u2500\u2500 docker-compose.yaml\n\u2514\u2500\u2500 uptime-kuma\n    \u2514\u2500\u2500 compose.yaml\n"})}),(0,t.jsxs)(n.p,{children:["You run Komodo Import with the ",(0,t.jsx)(n.code,{children:"homelab"})," directory:"]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'docker run ... -e "HOST_PARENT_PATH=/home/myUser/homelab" -v /home/myUser/homelab:/filesOnServer foxxmd/komodo-import'})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"immich"})," is created as a Git Repo Stack with","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Git Provider: ",(0,t.jsx)(n.code,{children:"git.mydomain.com"})]}),"\n",(0,t.jsxs)(n.li,{children:["Repo: ",(0,t.jsx)(n.code,{children:"myUser/immich"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"plex"})," is created as a Git Repo Stack with","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Git Provider: ",(0,t.jsx)(n.code,{children:"github.com"})]}),"\n",(0,t.jsxs)(n.li,{children:["Repo: ",(0,t.jsx)(n.code,{children:"anotherUser/immich"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"uptime-kuma"})," is created as a Files On Server Stack","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Run Directory: ",(0,t.jsx)(n.code,{children:"/home/myUser/homelab/uptime-kuma"})]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsx)(n.h6,{id:"monorepos",children:"Monorepos"}),"\n",(0,t.jsxs)(n.p,{children:["Komodo Import can also handle ",(0,t.jsx)(n.strong,{children:"monorepos."})," Mount the top-level repository folder to the usual ",(0,t.jsx)(n.code,{children:"/filesOnServer"})," location and it will automatically treat sub-folders as Git Repo Stacks using the top-level repository."]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsxs)(n.p,{children:["You have a repository at ",(0,t.jsx)(n.code,{children:"https://git.mydomain.com/myUser/homelab"})," and each folder in the repo is a different stack."]}),(0,t.jsx)(n.p,{children:"Your folder structure (on the host machine) looks like this:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"/home/myUser/homelab\n\u251C\u2500\u2500 .git\n\u251C\u2500\u2500 immich\n\u2502   \u2514\u2500\u2500 compose.yaml\n\u251C\u2500\u2500 plex\n\u2502   \u2514\u2500\u2500 docker-compose.yaml\n\u2514\u2500\u2500 uptime-kuma\n    \u2514\u2500\u2500 compose.yaml\n"})}),(0,t.jsxs)(n.p,{children:["You run Komodo Import with the ",(0,t.jsx)(n.code,{children:"homelab"})," directory:"]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"docker run ... -v /home/myUser/homelab:/filesOnServer foxxmd/komodo-import"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"immich"})," is created as a Git Repo Stack with","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Git Provider: ",(0,t.jsx)(n.code,{children:"git.mydomain.com"})]}),"\n",(0,t.jsxs)(n.li,{children:["Repo: ",(0,t.jsx)(n.code,{children:"myUser/homelab"})]}),"\n",(0,t.jsxs)(n.li,{children:["Run Directory: ",(0,t.jsx)(n.code,{children:"immich"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"plex"})," is created as a Git Repo Stack with","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Git Provider: ",(0,t.jsx)(n.code,{children:"git.mydomain.com"})]}),"\n",(0,t.jsxs)(n.li,{children:["Repo: ",(0,t.jsx)(n.code,{children:"myUser/homelab"})]}),"\n",(0,t.jsxs)(n.li,{children:["Run Directory: ",(0,t.jsx)(n.code,{children:"plex"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"uptime-kuma"})," is created as a Files On Server Stack","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Git Provider: ",(0,t.jsx)(n.code,{children:"git.mydomain.com"})]}),"\n",(0,t.jsxs)(n.li,{children:["Repo: ",(0,t.jsx)(n.code,{children:"myUser/homelab"})]}),"\n",(0,t.jsxs)(n.li,{children:["Run Directory: ",(0,t.jsx)(n.code,{children:"uptime-kuma"})]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Nested Monorepo"}),(0,t.jsxs)(n.p,{children:["If your stack folders are not the immediate sub-folders in your repository then specify the ",(0,t.jsx)(n.em,{children:"relative directory from git root"})," as ",(0,t.jsx)(n.code,{children:"GIT_STACKS_DIR"})," to specify what parent folder to use:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"/home/myUser/homelab\n\u251C\u2500\u2500 .git\n\u251C\u2500\u2500 myStacks\n\u2502   \u251C\u2500\u2500 immich\n\u2502   \u2502   \u2514\u2500\u2500 compose.yaml\n\u2502   \u251C\u2500\u2500 plex\n\u2502   \u2502   \u2514\u2500\u2500 docker-compose.yaml\n\u2502   \u2514\u2500\u2500 uptime-kuma\n\u2502       \u2514\u2500\u2500 compose.yaml\n\u2514\u2500\u2500 somethingElse\n"})}),(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"GIT_STACKS_DIR=myStacks"})," with the above example."]})]}),"\n",(0,t.jsx)(n.h4,{id:"configuration-1",children:"Configuration"}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Environmental Variables"}),(0,t.jsxs)(n.p,{children:["Combine with ",(0,t.jsx)(n.a,{href:"#common-stack-configuration",children:(0,t.jsx)(n.strong,{children:"Common Stack Configuration environmental variables"})})]}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"ENV"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Required"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"GIT_STACKS_DIR"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["Set sub-folder to use for stacks when generating from a ",(0,t.jsx)(n.a,{href:"#monorepo",children:"monorepo"})]})]})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"outputs-1",children:"Outputs"}),"\n",(0,t.jsx)(n.h3,{id:"console",children:"Console"}),"\n",(0,t.jsxs)(n.p,{children:["KI will always output the raw TOML form of a ",(0,t.jsx)(n.a,{href:"https://komo.do/docs/sync-resources",children:"Sync Resource"})," to console unless the env ",(0,t.jsx)(n.code,{children:"LOG_TOML=false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"You'll see this in docker logs or node's console like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'[2025-08-11 14:06:19.119 -0400] INFO   : [App] Copy the text between the scissors to use as the *Resource File* contents within your Resource Sync\n\n\u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F\n[[stack]]\nname = "compose"\n\n[stack.config]\nserver = "my-cool-server"\nrun_directory = "/home/myUser/homelab/compose"\n\n...\n\n\u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F\n[2025-08-11 14:06:19.119 -0400] INFO   : [App] Done!\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Use this with ",(0,t.jsx)(n.a,{href:"../resourceSync#create-sync-resource",children:"manually creating Sync Resources"})]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"--no-log-prefix"})," to get output without the service name prefix, makes getting clear TOML output easier."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"docker compose up --no-log-prefix\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"api-sync",children:"API Sync"}),"\n",(0,t.jsxs)(n.p,{children:["Komodo Import can ",(0,t.jsx)(n.strong,{children:"directly create Sync Resources in Komodo"})," using Komodo's API. ",(0,t.jsx)(n.strong,{children:"This output will only create the Sync, it will not execute it."})," After creating the Sync you should ",(0,t.jsx)(n.a,{href:"../resourceSync#verify-sync-changes",children:"verify its content before executing."})]}),"\n",(0,t.jsxs)(n.p,{children:["First, follow the instructions and configuration in the ",(0,t.jsx)(n.a,{href:"#komodo-api",children:"Komodo API"})," section."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Currently, the user creating the Api Key must be an ",(0,t.jsx)(n.strong,{children:"Admin"})," to create Sync Resources (but this will hopefully be more granular in the future)."]})}),"\n",(0,t.jsx)(n.p,{children:"Then, add these environmental variables to Komodo Import:"}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Environmental Variables"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"ENV"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Required"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Default"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"OUTPUT_API_SYNC"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["Must be ",(0,t.jsx)(n.code,{children:"true"})," to activate API Sync"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"EXISTING_SYNC"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"append"}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["Behavior if Resource Sync already exists. Either ",(0,t.jsx)(n.code,{children:"append"})," or ",(0,t.jsx)(n.code,{children:"overwrite"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"SYNC_NAME"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"-"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"komodo-import"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Name of Sync to create/modify"})]})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"file",children:"File"}),"\n",(0,t.jsxs)(n.p,{children:["Komodo Import will attempt to write the generated output to a ",(0,t.jsx)(n.code,{children:".toml"})," file if the ENV ",(0,t.jsx)(n.code,{children:"OUTPUT_DIR"})," is present. This should be the ",(0,t.jsx)(n.em,{children:"directory"})," (not file) that the generated file should be written to."]}),"\n",(0,t.jsxs)(n.p,{children:["Bind mount a folder into the container and set ",(0,t.jsx)(n.code,{children:"OUTPUT_DIR"})," like in the example below:"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"File Output Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"services:\n  komodo-import:\n  # ...\n    environment:\n      # ...\n      - OUTPUT_DIR=/output\n    volumes:\n      # ...\n      - /my/host/folder:/output\n"})})]}),"\n",(0,t.jsxs)(n.p,{children:["Use this with ",(0,t.jsx)(n.a,{href:"../resourceSync#create-sync-resource",children:"manually creating Sync Resources"})]}),"\n",(0,t.jsx)(n.h2,{id:"komodo-api",children:"Komodo API"}),"\n",(0,t.jsx)(n.p,{children:"Komodo Import can take advantage of your existing Komodo instance to configure Stacks with linked repos, write Resource Syncs directly, etc..."}),"\n",(0,t.jsx)(n.p,{children:"You will need to create an API Key and Secret to use the API."}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"API Key Creation Instructions"}),(0,t.jsx)(n.p,{children:"Navigate to your Komodo Web UI:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Open ",(0,t.jsx)(n.strong,{children:"Settings"})," -> ",(0,t.jsx)(n.strong,{children:"Profile"})]}),"\n",(0,t.jsxs)(n.li,{children:["Click ",(0,t.jsx)(n.strong,{children:"New Api Key"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Give it a name and optional Expiry"}),"\n",(0,t.jsxs)(n.li,{children:["Create the key and Copy the show ",(0,t.jsx)(n.strong,{children:"Key"})," and ",(0,t.jsx)(n.strong,{children:"Secret"})]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsx)(n.h4,{id:"api-configuration",children:"API Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Add these environmental variables to Komodo Import to use the Komodo API."}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Environmental Variables"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"ENV"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Required"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"KOMODO_URL"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Komodo Server URL"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"API_KEY"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Komodo API Key"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"API_SECRET"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Komodo API Secret"})]})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"Your Komodo URL should be as specific as possible, including port if required. Some examples of valid urls:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"http://192.168.0.100:9120"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"https://komodo.mydomain.com"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"https://myKomodo.com"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"http://komodo"})," (in docker network, for example)"]}),"\n"]})]})}function a(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);