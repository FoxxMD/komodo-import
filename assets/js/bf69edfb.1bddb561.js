"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["286"],{6553:function(e,n,o){o.r(n),o.d(n,{frontMatter:()=>m,default:()=>f,toc:()=>u,metadata:()=>r,assets:()=>p,contentTitle:()=>d});var r=JSON.parse('{"id":"installation/installation","title":"Overview","description":"Docker","source":"@site/docs/installation/installation.mdx","sourceDirName":"installation","slug":"/installation/","permalink":"/komodo-import/docs/installation/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/installation/installation.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Overview"},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/komodo-import/docs/category/installation"},"next":{"title":"Usage","permalink":"/komodo-import/docs/category/usage"}}'),s=o(5893),t=o(65),l=o(7902),i=o(5525),a=o(792),c=o.n(a);let m={sidebar_position:1,title:"Overview"},d=void 0,p={},u=[{value:"Docker",id:"docker",level:2},{value:"Docker Usage Example",id:"docker-usage-example",level:3},{value:"Local Installation",id:"local-installation",level:2},{value:"Nodejs",id:"nodejs",level:3},{value:"Usage Examples",id:"usage-examples",level:4}];function h(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components},{Details:o}=n;return o||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"docker",children:"Docker"}),"\n",(0,s.jsx)(n.p,{children:"Cross-platform images are built for x86 (Intel/AMD) and ARM64 (IE Raspberry Pi)"}),"\n",(0,s.jsx)(n.admonition,{title:"Available Images",type:"info",children:(0,s.jsxs)(l.Z,{children:[(0,s.jsxs)(i.Z,{value:"docker",label:"Dockerhub",children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://hub.docker.com/r/foxxmd/komodo-import",children:"Repository Page"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker.io/foxxmd/komodo-import:latest\n"})})]}),(0,s.jsxs)(i.Z,{value:"ghcr",label:"Github Packages",children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/FoxxMD/multi-scrobbler/pkgs/container/komodo-import",children:"Repository Page"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"ghcr.io/foxxmd/komodo-import:latest\n"})})]})]})}),"\n",(0,s.jsxs)(n.p,{children:["Or use the example ",(0,s.jsx)(n.code,{children:"compose.yml"}),", found in the repo, after modifying it to fit your configuration:"]}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.code,{children:"compose.yml"})}),(0,s.jsx)(c(),{language:"yaml",children:"services:\n  komodo-import:\n    image: foxxmd/komodo-import:latest\n    volumes:\n      ## ParentDirectory:FILES_ON_SERVER_DIR\n      - ./myprojects:/filesOnServer\n      \n      ## optional, TOML is saved to file here when OUTPUT_DIR env is present\n      #- ./output:/output\n    environment:\n      - TZ=America/New_York\n      ## Komodo Server name to use for generated Stacks\n      - SERVER_NAME=my-cool-server\n      ## ParentDirectory on the host use as Stack Run Directory prefix\n      - HOST_PARENT_PATH=/my/cool/path\n\n      ## optional\n      #- FILES_ON_SERVER_DIR=/filesOnServer\n      #- IMAGE_REGISTRY_PROVIDER=\n      #- IMAGE_REGISTRY_ACCOUNT=\n      #- AUTO_UPDATE=false\n      #- POLL_FOR_UPDATE=false\n      #- KOMODO_ENV_NAME=\n      #- COMPOSE_FILE_GLOB=\n      #- ENV_FILE_GLOB=\n\n      ## only saves to file if this ENV is present\n      #- OUTPUT_DIR=/output\n    restart: no"})]}),"\n",(0,s.jsx)(n.h3,{id:"docker-usage-example",children:"Docker Usage Example"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"/komodo-import/docs/quickstart",children:(0,s.jsx)(n.strong,{children:"Quick Start Guide"})})," for another guided docker-compose example"]})}),"\n",(0,s.jsx)(n.p,{children:"The example scenario:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You have ",(0,s.jsx)(n.a,{href:"https://komo.do/",children:"Komodo"})," already setup"]}),"\n",(0,s.jsxs)(n.li,{children:["You have installed ",(0,s.jsx)(n.a,{href:"https://komo.do/docs/connect-servers",children:"Periphery"})," on a machine","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The Komodo Server name for this machine is ",(0,s.jsx)(n.code,{children:"my-cool-server"})]}),"\n",(0,s.jsxs)(n.li,{children:["The machine is currently using dockge and has all of its compose projects located at ",(0,s.jsx)(n.code,{children:"/home/myUser/homelab"})," like...","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"/home/myUser/homelab/immich"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"/home/myUser/homelab/plex"})}),"\n",(0,s.jsx)(n.li,{children:"etc..."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.Z,{groupId:"runType",queryString:!0,children:[(0,s.jsx)(i.Z,{value:"docker",label:"Docker",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run --name komodo-import -e "SERVER_NAME=my-cool-server" -e "HOST_PARENT_PATH=/home/myUser/homelab" -v /home/myUser/homelab:/filesOnServer foxxmd/komodo-import\n'})})}),(0,s.jsxs)(i.Z,{value:"docker-compose",label:"Docker Compose",children:[(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"#docker",children:(0,s.jsx)(n.code,{children:"docker-compose.yml"})})," sample above for more options and annotations."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yml"',children:"services:\n  komodo-import:\n    image: foxxmd/komodo-import:latest\n      volumes:\n        ## ParentDirectory:FILES_ON_SERVER_DIR\n        - /home/myUser/homelab:/filesOnServer:ro\n    environment:\n      - TZ=America/New_York\n      ## Komodo Server name to use for generated Stacks\n      - SERVER_NAME=my-cool-server\n      ## ParentDirectory on the host use as Stack Run Directory prefix\n      - HOST_PARENT_PATH=/home/myUser/homelab\n    restart: no\n"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"docker compose up --no-log-prefix\n"})})]})]}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"Output"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'[2025-08-11 14:06:19.080 -0400] INFO   : [Init] Debug Mode: NO\n[2025-08-11 14:06:19.094 -0400] INFO   : [App] Version: 0.1.0\n[2025-08-11 14:06:19.095 -0400] INFO   : [App] Files On Server Dir ENV: /filesOnServer -> Resolved: /filesOnServer\n[2025-08-11 14:06:19.096 -0400] INFO   : [App] [Files On Server] Processing Stacks for 6 folders:\n/filesOnServer/compose.yaml\n/filesOnServer/immich\n/filesOnServer/jellyfin\n/filesOnServer/octoprint\n/filesOnServer/plex\n/filesOnServer/uptime-kuma\n[2025-08-11 14:06:19.096 -0400] INFO   : [App] [Files On Server] Compose File Glob: **/{compose,docker-compose}*.y?(a)ml\n[2025-08-11 14:06:19.097 -0400] INFO   : [App] [Files On Server] Env Glob: **/.env\n[2025-08-11 14:06:19.097 -0400] INFO   : [App] [Files On Server] [compose] Found Stack \'compose\' at dir /filesOnServer/compose.yaml\n[2025-08-11 14:06:19.103 -0400] WARN   : [App] [Files On Server] [compose] Did not find any files patterns matching compose glob\n[2025-08-11 14:06:19.103 -0400] INFO   : [App] [Files On Server] [compose] Stack config complete\n[2025-08-11 14:06:19.104 -0400] INFO   : [App] [Files On Server] [immich] Found Stack \'immich\' at dir /filesOnServer/immich\n[2025-08-11 14:06:19.107 -0400] INFO   : [App] [Files On Server] [immich] Found 1 files matching compose glob:\ndocker/docker-compose.yaml\n[2025-08-11 14:06:19.107 -0400] INFO   : [App] [Files On Server] [immich] Using file(s): docker/docker-compose.yaml\n[2025-08-11 14:06:19.108 -0400] INFO   : [App] [Files On Server] [immich] Stack config complete\n[2025-08-11 14:06:19.108 -0400] INFO   : [App] [Files On Server] [jellyfin] Found Stack \'jellyfin\' at dir /filesOnServer/jellyfin\n[2025-08-11 14:06:19.109 -0400] INFO   : [App] [Files On Server] [jellyfin] Found 3 files matching compose glob:\ncompose.yaml\ndocker-compose.yaml\ndocker/docker-compose.yaml\n[2025-08-11 14:06:19.110 -0400] INFO   : [App] [Files On Server] [jellyfin] Using file: compose.yaml but not writing to file_paths since this is the Komodo default\n[2025-08-11 14:06:19.111 -0400] INFO   : [App] [Files On Server] [jellyfin] Found 1 env files matching pattern **/.env:\n.env\n[2025-08-11 14:06:19.111 -0400] INFO   : [App] [Files On Server] [jellyfin] Using .komodoEnv for Komodo-written env file\n[2025-08-11 14:06:19.111 -0400] INFO   : [App] [Files On Server] [jellyfin] Stack config complete\n[2025-08-11 14:06:19.111 -0400] INFO   : [App] [Files On Server] [octoprint] Found Stack \'octoprint\' at dir /filesOnServer/octoprint\n[2025-08-11 14:06:19.112 -0400] WARN   : [App] [Files On Server] [octoprint] Did not find any files patterns matching compose glob\n[2025-08-11 14:06:19.112 -0400] INFO   : [App] [Files On Server] [octoprint] Stack config complete\n[2025-08-11 14:06:19.113 -0400] INFO   : [App] [Files On Server] [plex] Found Stack \'plex\' at dir /filesOnServer/plex\n[2025-08-11 14:06:19.114 -0400] INFO   : [App] [Files On Server] [plex] Found 1 files matching compose glob:\ncompose.yaml\n[2025-08-11 14:06:19.114 -0400] INFO   : [App] [Files On Server] [plex] Using file: compose.yaml but not writing to file_paths since this is the Komodo default\n[2025-08-11 14:06:19.115 -0400] INFO   : [App] [Files On Server] [plex] Stack config complete\n[2025-08-11 14:06:19.115 -0400] INFO   : [App] [Files On Server] [uptime-kuma] Found Stack \'uptime-kuma\' at dir /filesOnServer/uptime-kuma\n[2025-08-11 14:06:19.116 -0400] INFO   : [App] [Files On Server] [uptime-kuma] Found 1 files matching compose glob:\ncompose.yaml\n[2025-08-11 14:06:19.116 -0400] INFO   : [App] [Files On Server] [uptime-kuma] Using file: compose.yaml but not writing to file_paths since this is the Komodo default\n[2025-08-11 14:06:19.117 -0400] INFO   : [App] [Files On Server] [uptime-kuma] Found 1 env files matching pattern **/.env:\n.env\n[2025-08-11 14:06:19.117 -0400] INFO   : [App] [Files On Server] [uptime-kuma] Using .komodoEnv for Komodo-written env file\n[2025-08-11 14:06:19.117 -0400] INFO   : [App] [Files On Server] [uptime-kuma] Stack config complete\n[2025-08-11 14:06:19.118 -0400] INFO   : [App] [Files On Server] Built Stack configs for 6 folders\n[2025-08-11 14:06:19.119 -0400] INFO   : [App] Copy the text between the scissors to use as the *Resource File* contents within your Resource Sync\n\n\u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F\n[[stack]]\nname = "compose"\n\n[stack.config]\nserver = "my-cool-server"\nrun_directory = "/home/myUser/homelab/compose"\nfiles_on_host = true\nauto_update = false\npoll_for_updates = false\n\n[[stack]]\nname = "immich"\n\n[stack.config]\nserver = "my-cool-server"\nrun_directory = "/home/myUser/homelab/immich"\nfiles_on_host = true\nauto_update = false\npoll_for_updates = false\nfile_paths = [ "docker/docker-compose.yaml" ]\n\n[[stack]]\nname = "jellyfin"\n\n[stack.config]\nserver = "my-cool-server"\nrun_directory = "/home/myUser/homelab/jellyfin"\nfiles_on_host = true\nauto_update = false\npoll_for_updates = false\nenv_file_path = ".komodoEnv"\nadditional_env_files = [ ".env" ]\n\n[[stack]]\nname = "octoprint"\n\n[stack.config]\nserver = "my-cool-server"\nrun_directory = "/home/myUser/homelab/octoprint"\nfiles_on_host = true\nauto_update = false\npoll_for_updates = false\n\n[[stack]]\nname = "plex"\n\n[stack.config]\nserver = "my-cool-server"\nrun_directory = "/home/myUser/homelab/plex"\nfiles_on_host = true\nauto_update = false\npoll_for_updates = false\n\n[[stack]]\nname = "uptime-kuma"\n\n[stack.config]\nserver = "my-cool-server"\nrun_directory = "/home/myUser/homelab/uptime-kuma"\nfiles_on_host = true\nauto_update = false\npoll_for_updates = false\nenv_file_path = ".komodoEnv"\nadditional_env_files = [ ".env" ]\n\u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F\n[2025-08-11 14:06:19.119 -0400] INFO   : [App] Done!\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"local-installation",children:"Local Installation"}),"\n",(0,s.jsx)(n.h3,{id:"nodejs",children:"Nodejs"}),"\n",(0,s.jsx)(n.p,{children:"Clone this repository somewhere and then install from the working directory"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"git clone https://github.com/FoxxMD/komodo-import.git .\ncd komodo-import\nnvm use # optional, to set correct Node version\nnpm install\nnpm run docs:install && npm run build\nnpm run start\n"})}),"\n",(0,s.jsx)(n.h4,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"SERVER_NAME=my-server HOST_PARENT_PATH=/my/parent/folder node src/index.js\n"})})]})}function f(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},5525:function(e,n,o){o.d(n,{Z:()=>t});var r=o(5893);o(7294);var s=o(7026);function t({children:e,hidden:n,className:o}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_Ymn6",o),hidden:n,children:e})}},7902:function(e,n,o){o.d(n,{Z:()=>k});var r=o(5893),s=o(7294),t=o(7026),l=o(9599),i=o(6550),a=o(2e3),c=o(4520),m=o(8341),d=o(6009);function p(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u({value:e,tabValues:n}){return n.some(n=>n.value===e)}var h=o(7227);function f({className:e,block:n,selectedValue:o,selectValue:s,tabValues:i}){let a=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),m=e=>{let n=e.currentTarget,r=i[a.indexOf(n)].value;r!==o&&(c(n),s(r))},d=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{let o=a.indexOf(e.currentTarget)+1;n=a[o]??a[0];break}case"ArrowLeft":{let o=a.indexOf(e.currentTarget)-1;n=a[o]??a[a.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:s})=>(0,r.jsx)("li",{role:"tab",tabIndex:o===e?0:-1,"aria-selected":o===e,ref:e=>{a.push(e)},onKeyDown:d,onClick:m,...s,className:(0,t.Z)("tabs__item","tabItem_LNqP",s?.className,{"tabs__item--active":o===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:o}){let l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=l.find(e=>e.props.value===o);return e?(0,s.cloneElement)(e,{className:(0,t.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==o}))})}function x(e){let n=function(e){let{defaultValue:n,queryString:o=!1,groupId:r}=e,t=function(e){let{values:n,children:o}=e;return(0,s.useMemo)(()=>{let e=n??p(o).map(({props:{value:e,label:n,attributes:o,default:r}})=>({value:e,label:n,attributes:o,default:r})),r=(0,m.lx)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,o])}(e),[l,h]=(0,s.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!u({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let o=n.find(e=>e.default)??n[0];if(!o)throw Error("Unexpected error: 0 tabValues");return o.value})({defaultValue:n,tabValues:t})),[f,v]=function({queryString:e=!1,groupId:n}){let o=(0,i.k6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c._X)(r),(0,s.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(o.location.search);n.set(r,e),o.replace({...o.location,search:n.toString()})},[r,o])]}({queryString:o,groupId:r}),[x,k]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[o,r]=(0,d.Nk)(n);return[o,(0,s.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),g=(()=>{let e=f??x;return u({value:e,tabValues:t})?e:null})();return(0,a.Z)(()=>{g&&h(g)},[g]),{selectedValue:l,selectValue:(0,s.useCallback)(e=>{if(!u({value:e,tabValues:t}))throw Error(`Can't select invalid tab value=${e}`);h(e),v(e),k(e)},[v,k,t]),tabValues:t}}(e);return(0,r.jsxs)("div",{className:(0,t.Z)("tabs-container","tabList__CuJ"),children:[(0,r.jsx)(f,{...n,...e}),(0,r.jsx)(v,{...n,...e})]})}function k(e){let n=(0,h.Z)();return(0,r.jsx)(x,{...e,children:p(e.children)},String(n))}}}]);