"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["775"],{5106:function(e,s,n){n.d(s,{ZP:()=>l,d$:()=>o});var t=n(5893),r=n(65);let o=[];function i(e){let s={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:".\n\u2514\u2500\u2500 /home/myUser/homelab/\n    \u251C\u2500\u2500 immich/\n    \u2502   \u2514\u2500\u2500 compose.yaml\n    \u251C\u2500\u2500 plex/\n    \u2502   \u251C\u2500\u2500 docker-compose.yaml\n    \u2502   \u2514\u2500\u2500 .git\n    \u2514\u2500\u2500 uptime-kuma/\n        \u2514\u2500\u2500 compose.yaml\n"})})}function l(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},5386:function(e,s,n){n.r(s),n.d(s,{frontMatter:()=>p,default:()=>v,toc:()=>y,metadata:()=>t,assets:()=>g,contentTitle:()=>u});var t=JSON.parse('{"id":"usage/overview","title":"Overview","description":"Key Concepts","source":"@site/docs/usage/overview.mdx","sourceDirName":"usage","slug":"/usage/overview","permalink":"/komodo-import/docs/usage/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usage/overview.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Overview","toc_max_heading_level":4},"sidebar":"tutorialSidebar","previous":{"title":"Usage","permalink":"/komodo-import/docs/category/usage"},"next":{"title":"Using Sync Resources","permalink":"/komodo-import/docs/usage/resourceSync"}}'),r=n(5893),o=n(65),i=n(7057),l=n(4250);n(2292),n(7294),n(2575),n(5756),n(1142);var c=n(5106);let d=[];function h(e){let s={code:"code",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:".\n\u2514\u2500\u2500 /home/myUser\n    \u251C\u2500\u2500 homeLab\n    \u2502   \u251C\u2500\u2500 immich\n    \u2502   \u2502   \u2514\u2500\u2500 compose.yaml\n    \u2502   \u251C\u2500\u2500 plex\n    \u2502   \u2502   \u251C\u2500\u2500 docker-compose.yaml\n    \u2502   \u2502   \u2514\u2500\u2500 .git\n    \u2502   \u2514\u2500\u2500 owncloud\n    \u2502       \u2514\u2500\u2500 compose.yaml\n    \u2514\u2500\u2500 localDev\n        \u2514\u2500\u2500 myProjects\n            \u2514\u2500\u2500 project1\n                \u2514\u2500\u2500 compose.yaml\n"})})}function a(e={}){let{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}let x=[...d];function j(e){let s={code:"code",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"docker compose ls"})," reveals these projects:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"NAME     STATUS   CONFIG FILES\nimmich   running  /home/myUser/homelab/immich/compose.yaml\nplex     running  /home/myUser/homelab/plex/docker-compose.yaml\nproject1 running  /home/myUser/localDev/myProjects/project1/compose.yaml\n"})}),"\n",(0,r.jsx)(a,{})]})}function m(e={}){let{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}let p={sidebar_position:2,title:"Overview",toc_max_heading_level:4},u=void 0,g={},y=[{value:"Key Concepts",id:"key-concepts",level:2},{value:"Inputs",id:"inputs",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Outputs",id:"outputs",level:3},{value:"Inputs",id:"inputs-1",level:2},{value:"Stacks",id:"stacks",level:3},{value:"Stack Sources",id:"stack-sources",level:4},...c.d$,...x,{value:"Host Directory",id:"host-directory",level:4},...c.d$,...d,{value:"Stack Configuration",id:"stack-configuration",level:4},{value:"Git Repo Stacks",id:"git-repo-stacks",level:4},{value:"Monorepos",id:"monorepos",level:6},{value:"Outputs",id:"outputs-1",level:2},{value:"Console",id:"console",level:3},{value:"API Sync",id:"api-sync",level:3},{value:"Komodo API",id:"komodo-api",level:2},{value:"API Configuration",id:"api-configuration",level:4}];function f(e){let s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h6:"h6",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components},{Details:n}=s;return n||function(e,s){throw Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,r.jsxs)(s.p,{children:["There are three parts to using Komodo Import (KI). ",(0,r.jsx)(s.strong,{children:"Which Inputs, Configuration, and Outputs are used are all defined using environmental variables."})]}),"\n",(0,r.jsx)(s.h3,{id:"inputs",children:"Inputs"}),"\n",(0,r.jsxs)(s.p,{children:["This is what KI reads to generate ",(0,r.jsx)(s.a,{href:"https://komo.do/docs/resources",children:"Komodo Resources"}),". These are existing, docker-related resources on an individual machine such as"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://docs.docker.com/compose/how-tos/project-name/",children:"Docker Compose projects"})," (",(0,r.jsx)(s.code,{children:"compose.yaml"}),")"]}),"\n",(0,r.jsx)(s.li,{children:"Docker containers"}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(s.p,{children:["These are ",(0,r.jsx)(s.strong,{children:"environmental variables"})," supplied to KI to:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"set defaults for Komodo Resources (image registry, auto update, etc.)"}),"\n",(0,r.jsx)(s.li,{children:"define required fields for Komodo Resources (Server Name, Run Directory, etc.)"}),"\n",(0,r.jsx)(s.li,{children:"define settings for how KI to interacts with Komodo (API Key, existing Resource behavior, etc.)"}),"\n",(0,r.jsxs)(s.li,{children:["define what ",(0,r.jsx)(s.a,{href:"#outputs",children:"Outputs"})," KI uses (log to file, export to Komodo, etc.)"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"outputs",children:"Outputs"}),"\n",(0,r.jsxs)(s.p,{children:["These are where and how KI puts the Resources created from ",(0,r.jsx)(s.a,{href:"#inputs",children:"Inputs"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Log to output (docker logs, node console)"}),"\n",(0,r.jsx)(s.li,{children:"Export to Komodo API (create Resource Sync, etc.)"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"inputs-1",children:"Inputs"}),"\n",(0,r.jsx)(s.h3,{id:"stacks",children:"Stacks"}),"\n",(0,r.jsxs)(s.p,{children:["KI can create Komodo ",(0,r.jsx)(s.a,{href:"https://komo.do/docs/resources#stack",children:"Stack"})," Resources from existing resources on your machine."]}),"\n",(0,r.jsx)(s.p,{children:"It will automatically detect what type of Stack to create based on the presence of git folders/data:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Komodo ",(0,r.jsx)(s.strong,{children:"Files On Server"})," Stack => compose project/folder without a ",(0,r.jsx)(s.code,{children:".git"})," folder"]}),"\n",(0,r.jsxs)(s.li,{children:["Komodo ",(0,r.jsx)(s.strong,{children:"Git Repo"})," Stacks => compose project/folder with a ",(0,r.jsx)(s.code,{children:".git"})," folder or with a parent folder containing a ",(0,r.jsx)(s.code,{children:".git"})," folder"]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"stack-sources",children:"Stack Sources"}),"\n",(0,r.jsx)(s.p,{children:"KI can generate Stacks from existing projects on your machine using one of two methods:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"stacksFrom",queryString:!0,children:[(0,r.jsxs)(l.Z,{value:"dir",label:"Directory",children:[(0,r.jsxs)(s.p,{children:["For ",(0,r.jsx)(s.strong,{children:"Directory"})," (",(0,r.jsx)(s.code,{children:"STACKS_FROM=dir"}),"), Komodo Import will try to generate Stacks from each immediate ",(0,r.jsx)(s.strong,{children:"subfolder"})," inside the directory mounted into the container."]}),(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Example"}),(0,r.jsx)(c.ZP,{}),(0,r.jsxs)(s.p,{children:["Using ",(0,r.jsx)(s.code,{children:"STACKS_FROM=dir"})," with ",(0,r.jsx)(s.a,{href:"#host-directory",children:"host directory"})," ",(0,r.jsx)(s.code,{children:"/home/myUser/homelab"})," would produce Stacks for ",(0,r.jsx)(s.code,{children:"immich"})," ",(0,r.jsx)(s.code,{children:"plex"})," and ",(0,r.jsx)(s.code,{children:"uptime-kuma"}),"."]})]})]}),(0,r.jsxs)(l.Z,{value:"compose",label:"Compose Projects",children:[(0,r.jsxs)(s.p,{children:["For ",(0,r.jsx)(s.strong,{children:"Compose Projects"})," (",(0,r.jsx)(s.code,{children:"STACKS_FROM=compose"}),"), Komodo Import will try to generate Stacks from existing projects on your machine that were created with ",(0,r.jsx)(s.code,{children:"docker compose up"}),"."]}),(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Example"}),(0,r.jsx)(m,{}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Using ",(0,r.jsx)(s.code,{children:"STACKS_FROM=dir"})," with ",(0,r.jsx)(s.a,{href:"#host-directory",children:"host directory"})," ",(0,r.jsx)(s.code,{children:"/home/myUser"})," would produce Stacks for ",(0,r.jsx)(s.code,{children:"immich"})," ",(0,r.jsx)(s.code,{children:"plex"})," and ",(0,r.jsx)(s.code,{children:"project1"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["It ",(0,r.jsx)(s.strong,{children:"would not"})," generate a Stack for ",(0,r.jsx)(s.code,{children:"owncloud"})," since it was not created with ",(0,r.jsx)(s.code,{children:"docker compose up"})," yet."]}),"\n"]})]}),(0,r.jsxs)(s.p,{children:["To use ",(0,r.jsx)(s.strong,{children:"Compose Projects"})," you must give Komodo Import access to Docker. This can be done by mounting ",(0,r.jsx)(s.code,{children:"docker.sock"})," into the container or connecting it to a proxy service like ",(0,r.jsx)(s.a,{href:"https://github.com/Tecnativa/docker-socket-proxy",children:"docker-socket-proxy"}),"."]}),(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:["Using ",(0,r.jsx)(s.code,{children:"socket-proxy"})," (recommended)"]}),(0,r.jsxs)(s.p,{children:["Add a socket-proxy service to your compose file and set the env ",(0,r.jsx)(s.code,{children:"DOCKER_HOST"})," so Komodo Import knows how to connect to Docker:"]}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",metastring:'title="compose.yaml"',children:"services:\n  komodo-import:\n  # ...\n    environment:\n      # ...\n      # add to existing environment\n      - DOCKER_HOST=tcp://socket-proxy:2375\n  socket-proxy:\n    image: lscr.io/linuxserver/socket-proxy:latest\n    environment:\n      - CONTAINERS=1\n      - INFO=1\n      - POST=0\n      - PING=1\n      - VERSION=1\n    volumes:\n          - /var/run/docker.sock:/var/run/docker.sock:ro\n    read_only: true\n    tmpfs:\n      - /run\n"})})]}),(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:["Mounting ",(0,r.jsx)(s.code,{children:"docker.sock"})]}),(0,r.jsxs)(s.p,{children:["Mount ",(0,r.jsx)(s.code,{children:"/var/run/docker.sock"})," as a volume into the container:"]}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",metastring:'title="compose.yaml"',children:"services:\n  komodo-import:\n  # ...\n  volumes:\n    # ...\n    # add to existing volumes\n    - /var/run/docker.sock:/var/run/docker.sock:ro\n"})})]})]})]}),"\n",(0,r.jsx)(s.h4,{id:"host-directory",children:"Host Directory"}),"\n",(0,r.jsxs)(s.p,{children:["The directory on the ",(0,r.jsx)(s.strong,{children:"Host"})," machine that should be mounted into the Komodo Import container depends on which ",(0,r.jsx)(s.a,{href:"#stack-sources",children:"Stack Source"})," you are using."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The host directory should be mounted to ",(0,r.jsx)(s.code,{children:"/filesOnServer"})," in the container."]}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsxs)(s.strong,{children:["The host directory should also be set for ",(0,r.jsx)(s.code,{children:"HOST_DIR"})," env."]})}),"\n"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"stacksFrom",queryString:!0,children:[(0,r.jsxs)(l.Z,{value:"dir",label:"Directory",children:[(0,r.jsxs)(s.p,{children:["For ",(0,r.jsx)(s.strong,{children:"Directory"})," (",(0,r.jsx)(s.code,{children:"STACKS_FROM=dir"}),") use the ",(0,r.jsx)(s.strong,{children:"parent folder"})," containing all of the immediate ",(0,r.jsx)(s.strong,{children:"subfolders"})," that should be generated as Stacks."]}),(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Example"}),(0,r.jsx)(c.ZP,{}),(0,r.jsxs)(s.p,{children:["Directory should be ",(0,r.jsx)(s.code,{children:"home/myUser/homelab"}),":"]}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",metastring:'title="compose.yaml"',children:"services:\n  komodo-import:\n  # ...\n    volumes:\n      - /home/myUser/homelab:/filesOnServer\n    environment:\n      - HOST_DIR=/home/myUser/homelab\n"})})]})]}),(0,r.jsxs)(l.Z,{value:"compose",label:"Compose Projects",children:[(0,r.jsxs)(s.p,{children:["For ",(0,r.jsx)(s.strong,{children:"Compose Projects"})," (",(0,r.jsx)(s.code,{children:"STACKS_FROM=compose"}),") use the closest ",(0,r.jsx)(s.strong,{children:"parent folder"})," that contains all discovered compose project Config Files (",(0,r.jsx)(s.code,{children:"docker compose ls"}),")."]}),(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Example"}),(0,r.jsx)(a,{}),(0,r.jsxs)(s.p,{children:["Directory should be ",(0,r.jsx)(s.code,{children:"/home/myUser"})," because projects are found under both ",(0,r.jsx)(s.code,{children:"localDev"})," and ",(0,r.jsx)(s.code,{children:"homeLab"}),":"]}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",metastring:'itle="compose.yaml"',children:"services:\n  komodo-import:\n  # ...\n    volumes:\n      - /home/myUser:/filesOnServer\n    environment:\n      - HOST_DIR=/home/myUser\n"})})]})]})]}),"\n",(0,r.jsx)(s.h4,{id:"stack-configuration",children:"Stack Configuration"}),"\n",(0,r.jsx)(s.p,{children:"The configuration and behaviors below are applicable to all Stacks:"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Environmental Variables"}),(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"ENV"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Required"}),(0,r.jsx)(s.th,{children:"Default"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"SERVER_NAME"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["The name of the Komodo ",(0,r.jsx)(s.a,{href:"https://komo.do/docs/resources#server",children:"Server"})," where a Stack is located"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"STACKS_FROM"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"dir"})}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["What ",(0,r.jsx)(s.a,{href:"#stack-sources",children:(0,r.jsx)(s.strong,{children:"Stack Sources"})})," to generate Stacks from? ",(0,r.jsx)(s.code,{children:"dir"})," or ",(0,r.jsx)(s.code,{children:"compose"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"HOST_DIR"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["The parent directory on the ",(0,r.jsx)(s.strong,{children:"host"})," that mounted into the Komodo Import container"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"WRITE_ENV"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"true"})}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["Write the contents of found .env files to Komodo ",(0,r.jsx)(s.strong,{children:"Environment"}),". Likely want this as ",(0,r.jsx)(s.code,{children:"true"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"COMPOSE_FILE_GLOB"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"**/{compose,docker-compose}*.y?(a)ml"})}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["The ",(0,r.jsx)(s.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use for finding files for ",(0,r.jsx)(s.strong,{children:"Files Paths"})," in Stack config"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"ENV_FILE_GLOB"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"**/.env"})}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["The ",(0,r.jsx)(s.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use for finding files for ",(0,r.jsx)(s.strong,{children:"Additional Env Files"})," in Stack config"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"KOMODO_ENV_NAME"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:".komodoenv"})}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["If existing .env files are found, and ",(0,r.jsx)(s.code,{children:"WRITE_ENV=false"}),", then this name will be used for the .env that Komodo writes using its own Environment section"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"IMAGE_REGISTRY_PROVIDER"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"Name of Image Registry to use"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"IMAGE_REGISTRY_ACCOUNT"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"Image Registry account to use"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"POLL_FOR_UPDATE"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"Poll for newer images?"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"AUTO_UPDATE"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"Auto Update stack?"})]})]})]})]}),"\n",(0,r.jsxs)(n,{markdown:"1",children:[(0,r.jsx)("summary",{children:"Compose File Detection"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Default pattern","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Looks for ",(0,r.jsx)(s.code,{children:"compose.y(a)ml"})," and ",(0,r.jsx)(s.code,{children:"docker-compose.y(a)ml"})]}),"\n",(0,r.jsxs)(s.li,{children:["Files may have interim names like ",(0,r.jsx)(s.code,{children:"compose.dev.yaml"})]}),"\n",(0,r.jsxs)(s.li,{children:["Can be overridden with ",(0,r.jsx)(s.code,{children:"COMPOSE_FILE_GLOB"})," env for non-compose project stack sources"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Will prioritize ",(0,r.jsx)(s.code,{children:"compose.yaml"})," over ",(0,r.jsx)(s.code,{children:"docker-compose.yaml"})]}),"\n",(0,r.jsxs)(s.li,{children:["Will choose the file with the shortest path EX","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Prioritizes ",(0,r.jsx)(s.code,{children:"./compose.yaml"})," over ",(0,r.jsx)(s.code,{children:"./aFolder/compose.yaml"})]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsxs)(s.p,{children:["Komodo Import will ",(0,r.jsx)(s.strong,{children:"log"})," which files it detects and indicate which ones it will use for each project."]}),(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["When using ",(0,r.jsx)(s.a,{href:"./?stacksFrom=compose#stack-sources",children:"Compose Projects Stack Source"})," compose files are automatically parsed from the running projects."]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)(s.code,{children:".env"})," File Detection"]}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Default pattern","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Adds all ",(0,r.jsx)(s.code,{children:".env"})," files found at top-level or sub-folders"]}),"\n",(0,r.jsxs)(s.li,{children:["Can be overridden with ",(0,r.jsx)(s.code,{children:"ENV_FILE_GLOB"})," env"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["If a ",(0,r.jsx)(s.code,{children:".env"})," file is found and ",(0,r.jsx)(s.code,{children:"WRITE_ENV=false"})," then a Stack is configured to write it's own Environment section to ",(0,r.jsx)(s.code,{children:".komodoenv"})," instead of ",(0,r.jsx)(s.code,{children:".env"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Komodo env name can be overridden with ",(0,r.jsx)(s.code,{children:"KOMODO_ENV_NAME"})]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsxs)(s.p,{children:["Komodo Import will ",(0,r.jsx)(s.strong,{children:"log"})," which files it detects and indicate which ones it will use for each project."]})]}),"\n",(0,r.jsxs)(s.p,{children:["There is additional configuration available depending on the ",(0,r.jsx)(s.a,{href:"#stack-sources",children:"Stack Source"}),":"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"stacksFrom",queryString:!0,children:[(0,r.jsxs)(l.Z,{value:"dir",label:"Directory",children:[(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.code,{children:"_GLOB"})," patterns are for matching folder names within the parent folder, not full directory paths","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The default pattern matches all folder names except those starting with a ",(0,r.jsx)(s.code,{children:"."})]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"ENV"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Required"}),(0,r.jsx)(s.th,{children:"Default"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"FOLDER_GLOB"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"*"})}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["The ",(0,r.jsx)(s.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use for finding folders in the top-level folder given to Komodo Import"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"FOLDER_IGNORE_GLOB"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["The ",(0,r.jsx)(s.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use to ignore folders in the top-level folder given to Komodo Import"]})]})]})]})]}),(0,r.jsxs)(l.Z,{value:"compose",label:"Compose Projects",children:[(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.code,{children:"_GLOB"})," patterns are for matching ",(0,r.jsx)(s.strong,{children:"full directory paths"}),", not just a single folder name","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The default pattern matches all directories except those that have any folder starting with a ",(0,r.jsx)(s.code,{children:"."})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Komodo Import will ",(0,r.jsx)(s.strong,{children:"always"})," ignore projects created by Komodo itself (projects found in ",(0,r.jsx)(s.code,{children:"/etc/komodo"})," or ",(0,r.jsx)(s.code,{children:"/home/USER/komodo"}),")"]}),"\n"]}),(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"ENV"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Required"}),(0,r.jsx)(s.th,{children:"Default"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"COMPOSE_FILE_GLOB"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"**/**"})}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["The ",(0,r.jsx)(s.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use for matching a project's ",(0,r.jsx)(s.strong,{children:"full directory"})," on the host"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"COMPOSE_FILE_IGNORE_GLOB"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["The ",(0,r.jsx)(s.a,{href:"https://github.com/isaacs/node-glob?tab=readme-ov-file#glob-primer",children:"glob"})," pattern to use to ignore a project's ",(0,r.jsx)(s.strong,{children:"full directory"})," on the host"]})]})]})]})]})]}),"\n",(0,r.jsx)(s.h4,{id:"git-repo-stacks",children:"Git Repo Stacks"}),"\n",(0,r.jsxs)(s.p,{children:["If a parsed folder (or parent of it) contains a ",(0,r.jsx)(s.code,{children:".git"})," folder and it has a valid tracked branch + remote, then it will generate a ",(0,r.jsx)(s.strong,{children:"Git Repo Stack"}),"."]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"How Git Repository Parsing Works"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["A folder is only built as a Git Repo stack if...","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["It contains a valid ",(0,r.jsx)(s.code,{children:".git"})," folder or a parent folder contains a ",(0,r.jsx)(s.code,{children:".git"})," folder"]}),"\n",(0,r.jsx)(s.li,{children:"The git repo has a valid remote"}),"\n",(0,r.jsx)(s.li,{children:"The current checked out local branch is tracking a remote branch"}),"\n",(0,r.jsx)(s.li,{children:"If any of the above are not true then the folder is instead parsed as a Files On Server Stack"}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Example"}),(0,r.jsx)(s.p,{children:"You have two repositories at"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"https://git.mydomain.com/myUser/immich"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"https://github.com/anotherUser/plex"})}),"\n"]}),(0,r.jsx)(s.p,{children:"Your folder structure looks like this"}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"/home/myUser/homelab\n\u251C\u2500\u2500 immich\n\u2502   \u251C\u2500\u2500 .git\n\u2502   \u2514\u2500\u2500 compose.yaml\n\u251C\u2500\u2500 plex\n\u2502   \u251C\u2500\u2500 .git\n\u2502   \u2514\u2500\u2500 docker-compose.yaml\n\u2514\u2500\u2500 uptime-kuma\n    \u2514\u2500\u2500 compose.yaml\n"})}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"immich"})," is created as a Git Repo Stack with","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Git Provider: ",(0,r.jsx)(s.code,{children:"git.mydomain.com"})]}),"\n",(0,r.jsxs)(s.li,{children:["Repo: ",(0,r.jsx)(s.code,{children:"myUser/immich"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"plex"})," is created as a Git Repo Stack with","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Git Provider: ",(0,r.jsx)(s.code,{children:"github.com"})]}),"\n",(0,r.jsxs)(s.li,{children:["Repo: ",(0,r.jsx)(s.code,{children:"anotherUser/immich"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"uptime-kuma"})," is created as a Files On Server Stack","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Run Directory: ",(0,r.jsx)(s.code,{children:"/home/myUser/homelab/uptime-kuma"})]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s.p,{children:["Additionally, if ",(0,r.jsx)(s.a,{href:"#komodo-api",children:(0,r.jsx)(s.strong,{children:"Komodo API is configured"})})," then..."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["If Komodo has a ",(0,r.jsx)(s.a,{href:"https://komo.do/docs/resources#repo",children:"Repo"})," Resource that matches the remote, then the Git Repo Stack uses a Linked Repo"]}),"\n",(0,r.jsx)(s.li,{children:"If Komodo has a Git Provider matching the remote URL domain then that is used, along with the Git Provider user (private git is automatically detected)"}),"\n"]}),"\n",(0,r.jsx)(s.h6,{id:"monorepos",children:"Monorepos"}),"\n",(0,r.jsxs)(s.p,{children:["Komodo Import also handles ",(0,r.jsx)(s.strong,{children:"monorepos"}),' IE one git repository with many folders containing projects. The only requirement to ensure this works is that the git repo "root" directory must be ',(0,r.jsx)(s.a,{href:"#host-directory",children:"mounted into Komodo Import."})]}),"\n",(0,r.jsxs)(i.Z,{groupId:"stacksFrom",queryString:!0,children:[(0,r.jsxs)(l.Z,{value:"dir",label:"Directory",children:[(0,r.jsxs)(s.p,{children:["For ",(0,r.jsxs)(s.a,{href:"./?stacksFrom=dir#stack-sources",children:[(0,r.jsx)(s.strong,{children:"Directory"})," Stack Source"]})," use the root git repository directory as the ",(0,r.jsx)(s.a,{href:"#host-directory",children:"host directory"}),"."]}),(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Example"}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"/home/myUser/homelab\n\u251C\u2500\u2500 .git\n\u251C\u2500\u2500 immich\n\u2502   \u2514\u2500\u2500 compose.yaml\n\u251C\u2500\u2500 plex\n\u2502   \u2514\u2500\u2500 docker-compose.yaml\n\u2514\u2500\u2500 uptime-kuma\n    \u2514\u2500\u2500 compose.yaml\n"})}),(0,r.jsxs)(s.p,{children:["Use ",(0,r.jsx)(s.code,{children:"/home/myUser/homelab"})," as the ",(0,r.jsx)(s.a,{href:"#host-directory",children:"host directory"})," because it contains ",(0,r.jsx)(s.code,{children:".git"})," folder."]})]}),(0,r.jsxs)(s.p,{children:["If the directory containing your projects is not the root directory then use the ENV ",(0,r.jsx)(s.code,{children:"SCAN_DIR"})," to set the path to use for projects ",(0,r.jsx)(s.em,{children:"relative"})," to the ",(0,r.jsx)(s.a,{href:"#host-directory",children:"host directory"}),":"]}),(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Example"}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"/home/myUser/homelab\n\u251C\u2500\u2500 .git\n\u251C\u2500\u2500 myStacks   <---- parent folder containing projects\n\u2502   \u251C\u2500\u2500 immich\n\u2502   \u2502   \u2514\u2500\u2500 compose.yaml\n\u2502   \u251C\u2500\u2500 plex\n\u2502   \u2502   \u2514\u2500\u2500 docker-compose.yaml\n\u2502   \u2514\u2500\u2500 uptime-kuma\n\u2502       \u2514\u2500\u2500 compose.yaml\n\u2514\u2500\u2500 somethingElse\n"})}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Use ",(0,r.jsx)(s.code,{children:"/home/myUser/homelab"})," as the ",(0,r.jsx)(s.a,{href:"#host-directory",children:"host directory"})," because it contains ",(0,r.jsx)(s.code,{children:".git"})," folder"]}),"\n",(0,r.jsxs)(s.li,{children:["Use ",(0,r.jsx)(s.code,{children:"SCAN_DIR=myStacks"})," -- the folder Komodo Import will parse projects from, ",(0,r.jsx)(s.em,{children:"relative"})," to the host directory ",(0,r.jsx)(s.code,{children:"/home/myUser/homelab"})]}),"\n"]})]})]}),(0,r.jsx)(l.Z,{value:"compose",label:"Compose Projects",children:(0,r.jsxs)(s.p,{children:["Komodo Import will automatically determine if a project is in a monorepo by scanning all parent directories for ",(0,r.jsx)(s.code,{children:".git"})," folder. Just make sure the mounted ",(0,r.jsx)(s.a,{href:"#host-directory",children:"host directory"})," contains the monorepo folder at some level."]})})]}),"\n",(0,r.jsx)(s.h2,{id:"outputs-1",children:"Outputs"}),"\n",(0,r.jsx)(s.h3,{id:"console",children:"Console"}),"\n",(0,r.jsxs)(s.p,{children:["KI will always output the raw TOML form of a ",(0,r.jsx)(s.a,{href:"https://komo.do/docs/sync-resources",children:"Sync Resource"})," to console unless the env ",(0,r.jsx)(s.code,{children:"LOG_TOML=false"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"You'll see this in docker logs or node's console like this:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'[2025-08-11 14:06:19.119 -0400] INFO   : [App] Copy the text between the scissors to use as the *Resource File* contents within your Resource Sync\n\n\u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F\n[[stack]]\nname = "compose"\n\n[stack.config]\nserver = "my-cool-server"\nrun_directory = "/home/myUser/homelab/compose"\n\n...\n\n\u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F  \u2702\uFE0F\n[2025-08-11 14:06:19.119 -0400] INFO   : [App] Done!\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Use this with ",(0,r.jsx)(s.a,{href:"../resourceSync#create-sync-resource",children:"manually creating Sync Resources"})]}),"\n",(0,r.jsxs)(s.admonition,{type:"tip",children:[(0,r.jsxs)(s.p,{children:["Use ",(0,r.jsx)(s.code,{children:"--no-log-prefix"})," to get output without the service name prefix, makes getting clear TOML output easier."]}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"docker compose up --no-log-prefix\n"})})]}),"\n",(0,r.jsx)(s.h3,{id:"api-sync",children:"API Sync"}),"\n",(0,r.jsxs)(s.p,{children:["Komodo Import can ",(0,r.jsx)(s.strong,{children:"directly create Sync Resources in Komodo"})," using Komodo's API. ",(0,r.jsx)(s.strong,{children:"This output will only create the Sync, it will not execute it."})," After creating the Sync you should ",(0,r.jsx)(s.a,{href:"../resourceSync#verify-sync-changes",children:"verify its content before executing."})]}),"\n",(0,r.jsxs)(s.p,{children:["First, follow the instructions and configuration in the ",(0,r.jsx)(s.a,{href:"#komodo-api",children:"Komodo API"})," section."]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["Currently, the user creating the Api Key must be an ",(0,r.jsx)(s.strong,{children:"Admin"})," to create Sync Resources (but this will hopefully be more granular in the future)."]})}),"\n",(0,r.jsx)(s.p,{children:"Then, add these environmental variables to Komodo Import:"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Environmental Variables"}),(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"ENV"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Required"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Default"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"OUTPUT_API_SYNC"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"false"})}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["Must be ",(0,r.jsx)(s.code,{children:"true"})," to activate API Sync"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"EXISTING_SYNC"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"append"}),(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:["Behavior if Resource Sync already exists. Either ",(0,r.jsx)(s.code,{children:"append"})," or ",(0,r.jsx)(s.code,{children:"overwrite"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"SYNC_NAME"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"-"}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"komodo-import"}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"Name of Sync to create/modify"})]})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"komodo-api",children:"Komodo API"}),"\n",(0,r.jsx)(s.p,{children:"Komodo Import can take advantage of your existing Komodo instance to configure Stacks with linked repos, write Resource Syncs directly, etc..."}),"\n",(0,r.jsx)(s.p,{children:"You will need to create an API Key and Secret to use the API."}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"API Key Creation Instructions"}),(0,r.jsx)(s.p,{children:"Navigate to your Komodo Web UI:"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Open ",(0,r.jsx)(s.strong,{children:"Settings"})," -> ",(0,r.jsx)(s.strong,{children:"Profile"})]}),"\n",(0,r.jsxs)(s.li,{children:["Click ",(0,r.jsx)(s.strong,{children:"New Api Key"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Give it a name and optional Expiry"}),"\n",(0,r.jsxs)(s.li,{children:["Create the key and Copy the show ",(0,r.jsx)(s.strong,{children:"Key"})," and ",(0,r.jsx)(s.strong,{children:"Secret"})]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(s.h4,{id:"api-configuration",children:"API Configuration"}),"\n",(0,r.jsx)(s.p,{children:"Add these environmental variables to Komodo Import to use the Komodo API."}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Environmental Variables"}),(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"ENV"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Required"}),(0,r.jsx)(s.th,{children:"Default"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"KOMODO_URL"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"Komodo Server URL"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"API_KEY"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"Komodo API Key"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{style:{textAlign:"left"},children:(0,r.jsx)(s.code,{children:"API_SECRET"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"\u2611\uFE0F"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"Komodo API Secret"})]})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"Your Komodo URL should be as specific as possible, including port if required. Some examples of valid urls:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"http://192.168.0.100:9120"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"https://komodo.mydomain.com"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"https://myKomodo.com"})}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"http://komodo"})," (in docker network, for example)"]}),"\n"]})]})}function v(e={}){let{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}}}]);